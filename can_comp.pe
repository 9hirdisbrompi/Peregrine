type a = def(int)->int

def test(int x)->int:#this is comment
    return x
def lambda_test(a x):
    printf("The value is %d\n",x(5))
def func(int g)->int:
    return g
def main():
    def z():
        printf("hello\n")
    z()
    Cppcode(#ifdef _WIN32)
    printf("On windows\n")
    Cppcode(#elif __linux__)
    printf("On linux\n")
    Cppcode(#endif)
    scope:
        printf("Hello from new scope\n")
    bool x=False
    const bool cc=False
    x=True
    bool y
    y=True
    if x==y:
        pass
    printf("%d\n",test(0))
    int a=0
    int b=7
    int c=7
    match a,b,c:
        case 5,7,8:
            printf("a is 5,b is 7 and c is 8")
        case 4,7,_:#c can be anything
            printf("a is 4 but b is 7")
            break  #we dont want default to execute 
        case 4,_,7:#b can be anything
            printf("a is 4 but c is 7")
            break  #we dont want default to execute 
        case 8,_:#b and c can be anything
            printf("a is 8")
        case _:
            printf("idk")
        #optional
        default:#will be executed at the end if no break
            printf("\nHello\n")
    lambda_test(func)
    assert 8==8
    #should throw an error
    #assert 8==6