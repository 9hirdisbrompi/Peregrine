"Multiline comment
Hello"
static inline def static_inline_func():
    printf("Hello from static inline function\n")
inline def inline_func():
    printf("Hello from inline function\n")
@x
def static_test(int a, str b) -> int:
    return b
static def staticfunc():
    printf("Hello from static function")
static v.b x=0
static v.b y
static int r
static int b=9
static m =9
union gg:
    int hi
    bool y
b.n=8
c.g().n  = 8
c.g().n[9]  = 8
c.g i =8
enum colours:
    RED = 144,
    GREEN,
    BLUE = 59

def test(int a) -> str:
    return "hey"

test(45)

type potato = float
potato t = 2.0
potato b = "hey"
int a
b + 34
const test = "hello"

def test() -> int:
    msg + "hey"
    return

test(12, 56, 34)

while True:
    continue

5 + 3**7 - 8 ** -9/7 or 4+4 /9

7&7|7


test(34, "hey")

type a = int
from os import getuid

for i in [4, 2, 65]:
    print(i)
    
if True:
    pass

match x,y,z:
    case y,c,_:#z can be anything
        printf(C)
    case y,_:#z and x can be anything
        printf(C)
    case _:
        printf(C)
    default:#will be executed at the end if no break
        pass
"
class test:
    int a = 5
    int b = 2

    def addition(int a,int b) -> int:
        return a+b
"
type x = def(int , char)->char
type x = def()->char
type x = def()
@x
@x
def test(int a, str b) -> int:
    return b
assert 5==8
assert 5==5
raise ZeroDivisionError

with x as m:
    printf("Hello")
with x as m,k as d:
    printf("Hello")
